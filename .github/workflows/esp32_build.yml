name: ESP32 Build

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        gcc: [10]
        config: [esp32aif]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      
      - name: Install Prerequisites
        shell: bash
        run: |
          sudo apt-get install git wget libncurses-dev flex bison gperf python3 python3-pip python3-setuptools python3-serial python3-cryptography python3-future python3-pyparsing python3-pyelftools cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10

          rm -rf /usr/local/bin/cmake

          sudo apt remove --purge --auto-remove cmake
          sudo apt update && \
            sudo apt install -y software-properties-common lsb-release && \
              sudo apt clean all
          
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
          sudo apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"
          sudo apt update
          sudo apt install cmake

          git submodule update --init --recursive --depth=1
          ./Tools/scripts/esp32_get_idf.sh

          sudo ln -s /usr/bin/ninja /usr/bin/ninja-build

          cd modules/esp_idf
          echo "Installing ESP-IDF tools...."
          ./install.sh 2>&1 > /dev/null
          cd ../..
          
      - name: configure ${{matrix.config}}
        env:
          CI_BUILD_TARGET: ${{matrix.config}}
        shell: bash
        run: |
          source ~/.bash_profile
          PATH="/github/home/.local/bin:$PATH"
          echo $PATH
          
          cd modules/esp_idf
          ./install.sh
          source ./export.sh
          cd ../..
          
          python -m pip install --progress-bar off future lxml pymavlink MAVProxy pexpect flake8 geocoder empy dronecan
          which cmake

          mkdir -p ./dist/${{matrix.config}}
          ./waf configure --board ${{matrix.config}}

          ./waf plane
          cp ./build/${{matrix.config}}/esp-idf_build/ardupilot.elf ./dist/${{matrix.config}}-plane.elf
          cp ./build/${{matrix.config}}/esp-idf_build/ardupilot.bin ./dist/${{matrix.config}}-plane.bin

          ./waf copter
          cp ./build/${{matrix.config}}/esp-idf_build/ardupilot.elf ./dist/${{matrix.config}}-copter.elf
          cp ./build/${{matrix.config}}/esp-idf_build/ardupilot.bin ./dist/${{matrix.config}}-copter.bin
          
          cp ./build/${{matrix.config}}/esp-idf_build/bootloader/bootloader.bin           ./dist/${{matrix.config}}-bootloader.bin
          cp ./build/${{matrix.config}}/esp-idf_build/partition_table/partition-table.bin ./dist/${{matrix.config}}-partition-table.bin
      
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: ./dist/**/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true